SET DEFINE OFF;
MERGE INTO UAB_GET.T_DOCUMENTO A USING
 (SELECT
  9 as ID_DOCUMENTO,
  13 as ID_PERSONA,
  1 as ID_TIPO_DOCUMENTO,
  NULL as NUMERO_DOCUMENTO,
  NULL as DESCRIPCION,
  NULL as APP_ID_USUARIO,
  NULL as AUD_ESTADO,
  'APP_GESTION_UAB' as AUD_USUARIO,
  TO_TIMESTAMP('11/04/2015 11:00:03.939000 AM','DD/MM/YYYY HH12:MI:SS.FF AM') as AUD_FECHA,
  NULL as FECHA_REGISTRO
  FROM DUAL) B
ON (A.ID_DOCUMENTO = B.ID_DOCUMENTO)
WHEN NOT MATCHED THEN 
INSERT (
  ID_DOCUMENTO, ID_PERSONA, ID_TIPO_DOCUMENTO, NUMERO_DOCUMENTO, DESCRIPCION, 
  APP_ID_USUARIO, AUD_ESTADO, AUD_USUARIO, AUD_FECHA, FECHA_REGISTRO)
VALUES (
  B.ID_DOCUMENTO, B.ID_PERSONA, B.ID_TIPO_DOCUMENTO, B.NUMERO_DOCUMENTO, B.DESCRIPCION, 
  B.APP_ID_USUARIO, B.AUD_ESTADO, B.AUD_USUARIO, B.AUD_FECHA, B.FECHA_REGISTRO)
WHEN MATCHED THEN
UPDATE SET 
  A.ID_PERSONA = B.ID_PERSONA,
  A.ID_TIPO_DOCUMENTO = B.ID_TIPO_DOCUMENTO,
  A.NUMERO_DOCUMENTO = B.NUMERO_DOCUMENTO,
  A.DESCRIPCION = B.DESCRIPCION,
  A.APP_ID_USUARIO = B.APP_ID_USUARIO,
  A.AUD_ESTADO = B.AUD_ESTADO,
  A.AUD_USUARIO = B.AUD_USUARIO,
  A.AUD_FECHA = B.AUD_FECHA,
  A.FECHA_REGISTRO = B.FECHA_REGISTRO;

MERGE INTO UAB_GET.T_DOCUMENTO A USING
 (SELECT
  12 as ID_DOCUMENTO,
  17 as ID_PERSONA,
  2 as ID_TIPO_DOCUMENTO,
  '65498744' as NUMERO_DOCUMENTO,
  NULL as DESCRIPCION,
  NULL as APP_ID_USUARIO,
  NULL as AUD_ESTADO,
  'APP_GESTION_UAB' as AUD_USUARIO,
  TO_TIMESTAMP('27/04/2015 05:47:56.132000 PM','DD/MM/YYYY HH12:MI:SS.FF AM') as AUD_FECHA,
  TO_DATE('04/27/2015 17:47:56', 'MM/DD/YYYY HH24:MI:SS') as FECHA_REGISTRO
  FROM DUAL) B
ON (A.ID_DOCUMENTO = B.ID_DOCUMENTO)
WHEN NOT MATCHED THEN 
INSERT (
  ID_DOCUMENTO, ID_PERSONA, ID_TIPO_DOCUMENTO, NUMERO_DOCUMENTO, DESCRIPCION, 
  APP_ID_USUARIO, AUD_ESTADO, AUD_USUARIO, AUD_FECHA, FECHA_REGISTRO)
VALUES (
  B.ID_DOCUMENTO, B.ID_PERSONA, B.ID_TIPO_DOCUMENTO, B.NUMERO_DOCUMENTO, B.DESCRIPCION, 
  B.APP_ID_USUARIO, B.AUD_ESTADO, B.AUD_USUARIO, B.AUD_FECHA, B.FECHA_REGISTRO)
WHEN MATCHED THEN
UPDATE SET 
  A.ID_PERSONA = B.ID_PERSONA,
  A.ID_TIPO_DOCUMENTO = B.ID_TIPO_DOCUMENTO,
  A.NUMERO_DOCUMENTO = B.NUMERO_DOCUMENTO,
  A.DESCRIPCION = B.DESCRIPCION,
  A.APP_ID_USUARIO = B.APP_ID_USUARIO,
  A.AUD_ESTADO = B.AUD_ESTADO,
  A.AUD_USUARIO = B.AUD_USUARIO,
  A.AUD_FECHA = B.AUD_FECHA,
  A.FECHA_REGISTRO = B.FECHA_REGISTRO;

MERGE INTO UAB_GET.T_DOCUMENTO A USING
 (SELECT
  7 as ID_DOCUMENTO,
  9 as ID_PERSONA,
  1 as ID_TIPO_DOCUMENTO,
  NULL as NUMERO_DOCUMENTO,
  NULL as DESCRIPCION,
  NULL as APP_ID_USUARIO,
  NULL as AUD_ESTADO,
  'APP_GESTION_UAB' as AUD_USUARIO,
  TO_TIMESTAMP('05/04/2015 05:25:32.993000 PM','DD/MM/YYYY HH12:MI:SS.FF AM') as AUD_FECHA,
  NULL as FECHA_REGISTRO
  FROM DUAL) B
ON (A.ID_DOCUMENTO = B.ID_DOCUMENTO)
WHEN NOT MATCHED THEN 
INSERT (
  ID_DOCUMENTO, ID_PERSONA, ID_TIPO_DOCUMENTO, NUMERO_DOCUMENTO, DESCRIPCION, 
  APP_ID_USUARIO, AUD_ESTADO, AUD_USUARIO, AUD_FECHA, FECHA_REGISTRO)
VALUES (
  B.ID_DOCUMENTO, B.ID_PERSONA, B.ID_TIPO_DOCUMENTO, B.NUMERO_DOCUMENTO, B.DESCRIPCION, 
  B.APP_ID_USUARIO, B.AUD_ESTADO, B.AUD_USUARIO, B.AUD_FECHA, B.FECHA_REGISTRO)
WHEN MATCHED THEN
UPDATE SET 
  A.ID_PERSONA = B.ID_PERSONA,
  A.ID_TIPO_DOCUMENTO = B.ID_TIPO_DOCUMENTO,
  A.NUMERO_DOCUMENTO = B.NUMERO_DOCUMENTO,
  A.DESCRIPCION = B.DESCRIPCION,
  A.APP_ID_USUARIO = B.APP_ID_USUARIO,
  A.AUD_ESTADO = B.AUD_ESTADO,
  A.AUD_USUARIO = B.AUD_USUARIO,
  A.AUD_FECHA = B.AUD_FECHA,
  A.FECHA_REGISTRO = B.FECHA_REGISTRO;

MERGE INTO UAB_GET.T_DOCUMENTO A USING
 (SELECT
  10 as ID_DOCUMENTO,
  15 as ID_PERSONA,
  1 as ID_TIPO_DOCUMENTO,
  NULL as NUMERO_DOCUMENTO,
  NULL as DESCRIPCION,
  NULL as APP_ID_USUARIO,
  NULL as AUD_ESTADO,
  'APP_GESTION_UAB' as AUD_USUARIO,
  TO_TIMESTAMP('27/04/2015 05:22:23.308000 PM','DD/MM/YYYY HH12:MI:SS.FF AM') as AUD_FECHA,
  NULL as FECHA_REGISTRO
  FROM DUAL) B
ON (A.ID_DOCUMENTO = B.ID_DOCUMENTO)
WHEN NOT MATCHED THEN 
INSERT (
  ID_DOCUMENTO, ID_PERSONA, ID_TIPO_DOCUMENTO, NUMERO_DOCUMENTO, DESCRIPCION, 
  APP_ID_USUARIO, AUD_ESTADO, AUD_USUARIO, AUD_FECHA, FECHA_REGISTRO)
VALUES (
  B.ID_DOCUMENTO, B.ID_PERSONA, B.ID_TIPO_DOCUMENTO, B.NUMERO_DOCUMENTO, B.DESCRIPCION, 
  B.APP_ID_USUARIO, B.AUD_ESTADO, B.AUD_USUARIO, B.AUD_FECHA, B.FECHA_REGISTRO)
WHEN MATCHED THEN
UPDATE SET 
  A.ID_PERSONA = B.ID_PERSONA,
  A.ID_TIPO_DOCUMENTO = B.ID_TIPO_DOCUMENTO,
  A.NUMERO_DOCUMENTO = B.NUMERO_DOCUMENTO,
  A.DESCRIPCION = B.DESCRIPCION,
  A.APP_ID_USUARIO = B.APP_ID_USUARIO,
  A.AUD_ESTADO = B.AUD_ESTADO,
  A.AUD_USUARIO = B.AUD_USUARIO,
  A.AUD_FECHA = B.AUD_FECHA,
  A.FECHA_REGISTRO = B.FECHA_REGISTRO;

MERGE INTO UAB_GET.T_DOCUMENTO A USING
 (SELECT
  11 as ID_DOCUMENTO,
  16 as ID_PERSONA,
  2 as ID_TIPO_DOCUMENTO,
  NULL as NUMERO_DOCUMENTO,
  NULL as DESCRIPCION,
  NULL as APP_ID_USUARIO,
  NULL as AUD_ESTADO,
  'APP_GESTION_UAB' as AUD_USUARIO,
  TO_TIMESTAMP('27/04/2015 05:23:02.371000 PM','DD/MM/YYYY HH12:MI:SS.FF AM') as AUD_FECHA,
  NULL as FECHA_REGISTRO
  FROM DUAL) B
ON (A.ID_DOCUMENTO = B.ID_DOCUMENTO)
WHEN NOT MATCHED THEN 
INSERT (
  ID_DOCUMENTO, ID_PERSONA, ID_TIPO_DOCUMENTO, NUMERO_DOCUMENTO, DESCRIPCION, 
  APP_ID_USUARIO, AUD_ESTADO, AUD_USUARIO, AUD_FECHA, FECHA_REGISTRO)
VALUES (
  B.ID_DOCUMENTO, B.ID_PERSONA, B.ID_TIPO_DOCUMENTO, B.NUMERO_DOCUMENTO, B.DESCRIPCION, 
  B.APP_ID_USUARIO, B.AUD_ESTADO, B.AUD_USUARIO, B.AUD_FECHA, B.FECHA_REGISTRO)
WHEN MATCHED THEN
UPDATE SET 
  A.ID_PERSONA = B.ID_PERSONA,
  A.ID_TIPO_DOCUMENTO = B.ID_TIPO_DOCUMENTO,
  A.NUMERO_DOCUMENTO = B.NUMERO_DOCUMENTO,
  A.DESCRIPCION = B.DESCRIPCION,
  A.APP_ID_USUARIO = B.APP_ID_USUARIO,
  A.AUD_ESTADO = B.AUD_ESTADO,
  A.AUD_USUARIO = B.AUD_USUARIO,
  A.AUD_FECHA = B.AUD_FECHA,
  A.FECHA_REGISTRO = B.FECHA_REGISTRO;

MERGE INTO UAB_GET.T_DOCUMENTO A USING
 (SELECT
  8 as ID_DOCUMENTO,
  2 as ID_PERSONA,
  2 as ID_TIPO_DOCUMENTO,
  '555999' as NUMERO_DOCUMENTO,
  'VISA' as DESCRIPCION,
  200 as APP_ID_USUARIO,
  1 as AUD_ESTADO,
  'APP_GESTION_UAB' as AUD_USUARIO,
  TO_TIMESTAMP('08/04/2015 04:09:01.762000 PM','DD/MM/YYYY HH12:MI:SS.FF AM') as AUD_FECHA,
  TO_DATE('04/08/2015 16:08:00', 'MM/DD/YYYY HH24:MI:SS') as FECHA_REGISTRO
  FROM DUAL) B
ON (A.ID_DOCUMENTO = B.ID_DOCUMENTO)
WHEN NOT MATCHED THEN 
INSERT (
  ID_DOCUMENTO, ID_PERSONA, ID_TIPO_DOCUMENTO, NUMERO_DOCUMENTO, DESCRIPCION, 
  APP_ID_USUARIO, AUD_ESTADO, AUD_USUARIO, AUD_FECHA, FECHA_REGISTRO)
VALUES (
  B.ID_DOCUMENTO, B.ID_PERSONA, B.ID_TIPO_DOCUMENTO, B.NUMERO_DOCUMENTO, B.DESCRIPCION, 
  B.APP_ID_USUARIO, B.AUD_ESTADO, B.AUD_USUARIO, B.AUD_FECHA, B.FECHA_REGISTRO)
WHEN MATCHED THEN
UPDATE SET 
  A.ID_PERSONA = B.ID_PERSONA,
  A.ID_TIPO_DOCUMENTO = B.ID_TIPO_DOCUMENTO,
  A.NUMERO_DOCUMENTO = B.NUMERO_DOCUMENTO,
  A.DESCRIPCION = B.DESCRIPCION,
  A.APP_ID_USUARIO = B.APP_ID_USUARIO,
  A.AUD_ESTADO = B.AUD_ESTADO,
  A.AUD_USUARIO = B.AUD_USUARIO,
  A.AUD_FECHA = B.AUD_FECHA,
  A.FECHA_REGISTRO = B.FECHA_REGISTRO;

COMMIT;
