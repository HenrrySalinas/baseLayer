SET DEFINE OFF;
MERGE INTO UAB_GET.TPAR_PRECIO A USING
 (SELECT
  1 as ID_PRECIO,
  20 as PRECIO,
  20 as COSTO,
  NULL as OBSERVACIONES,
  500 as APP_ID_USUARIO,
  1 as AUD_ESTADO,
  'SYSTEM' as AUD_USUARIO,
  TO_TIMESTAMP('20/04/2015 01:32:21.666000 PM','DD/MM/YYYY HH12:MI:SS.FF AM') as AUD_FECHA,
  TO_DATE('04/20/2015 01:32:20', 'MM/DD/YYYY HH24:MI:SS') as FECHA_REGISTRO
  FROM DUAL) B
ON (A.ID_PRECIO = B.ID_PRECIO)
WHEN NOT MATCHED THEN 
INSERT (
  ID_PRECIO, PRECIO, COSTO, OBSERVACIONES, APP_ID_USUARIO, 
  AUD_ESTADO, AUD_USUARIO, AUD_FECHA, FECHA_REGISTRO)
VALUES (
  B.ID_PRECIO, B.PRECIO, B.COSTO, B.OBSERVACIONES, B.APP_ID_USUARIO, 
  B.AUD_ESTADO, B.AUD_USUARIO, B.AUD_FECHA, B.FECHA_REGISTRO)
WHEN MATCHED THEN
UPDATE SET 
  A.PRECIO = B.PRECIO,
  A.COSTO = B.COSTO,
  A.OBSERVACIONES = B.OBSERVACIONES,
  A.APP_ID_USUARIO = B.APP_ID_USUARIO,
  A.AUD_ESTADO = B.AUD_ESTADO,
  A.AUD_USUARIO = B.AUD_USUARIO,
  A.AUD_FECHA = B.AUD_FECHA,
  A.FECHA_REGISTRO = B.FECHA_REGISTRO;

MERGE INTO UAB_GET.TPAR_PRECIO A USING
 (SELECT
  2 as ID_PRECIO,
  25 as PRECIO,
  25 as COSTO,
  NULL as OBSERVACIONES,
  500 as APP_ID_USUARIO,
  1 as AUD_ESTADO,
  'SYSTEM' as AUD_USUARIO,
  TO_TIMESTAMP('20/04/2015 01:32:29.518000 PM','DD/MM/YYYY HH12:MI:SS.FF AM') as AUD_FECHA,
  TO_DATE('04/20/2015 01:32:20', 'MM/DD/YYYY HH24:MI:SS') as FECHA_REGISTRO
  FROM DUAL) B
ON (A.ID_PRECIO = B.ID_PRECIO)
WHEN NOT MATCHED THEN 
INSERT (
  ID_PRECIO, PRECIO, COSTO, OBSERVACIONES, APP_ID_USUARIO, 
  AUD_ESTADO, AUD_USUARIO, AUD_FECHA, FECHA_REGISTRO)
VALUES (
  B.ID_PRECIO, B.PRECIO, B.COSTO, B.OBSERVACIONES, B.APP_ID_USUARIO, 
  B.AUD_ESTADO, B.AUD_USUARIO, B.AUD_FECHA, B.FECHA_REGISTRO)
WHEN MATCHED THEN
UPDATE SET 
  A.PRECIO = B.PRECIO,
  A.COSTO = B.COSTO,
  A.OBSERVACIONES = B.OBSERVACIONES,
  A.APP_ID_USUARIO = B.APP_ID_USUARIO,
  A.AUD_ESTADO = B.AUD_ESTADO,
  A.AUD_USUARIO = B.AUD_USUARIO,
  A.AUD_FECHA = B.AUD_FECHA,
  A.FECHA_REGISTRO = B.FECHA_REGISTRO;

MERGE INTO UAB_GET.TPAR_PRECIO A USING
 (SELECT
  3 as ID_PRECIO,
  30 as PRECIO,
  30 as COSTO,
  NULL as OBSERVACIONES,
  500 as APP_ID_USUARIO,
  1 as AUD_ESTADO,
  'SYSTEM' as AUD_USUARIO,
  TO_TIMESTAMP('20/04/2015 01:32:31.972000 PM','DD/MM/YYYY HH12:MI:SS.FF AM') as AUD_FECHA,
  TO_DATE('04/20/2015 01:32:20', 'MM/DD/YYYY HH24:MI:SS') as FECHA_REGISTRO
  FROM DUAL) B
ON (A.ID_PRECIO = B.ID_PRECIO)
WHEN NOT MATCHED THEN 
INSERT (
  ID_PRECIO, PRECIO, COSTO, OBSERVACIONES, APP_ID_USUARIO, 
  AUD_ESTADO, AUD_USUARIO, AUD_FECHA, FECHA_REGISTRO)
VALUES (
  B.ID_PRECIO, B.PRECIO, B.COSTO, B.OBSERVACIONES, B.APP_ID_USUARIO, 
  B.AUD_ESTADO, B.AUD_USUARIO, B.AUD_FECHA, B.FECHA_REGISTRO)
WHEN MATCHED THEN
UPDATE SET 
  A.PRECIO = B.PRECIO,
  A.COSTO = B.COSTO,
  A.OBSERVACIONES = B.OBSERVACIONES,
  A.APP_ID_USUARIO = B.APP_ID_USUARIO,
  A.AUD_ESTADO = B.AUD_ESTADO,
  A.AUD_USUARIO = B.AUD_USUARIO,
  A.AUD_FECHA = B.AUD_FECHA,
  A.FECHA_REGISTRO = B.FECHA_REGISTRO;

MERGE INTO UAB_GET.TPAR_PRECIO A USING
 (SELECT
  4 as ID_PRECIO,
  35 as PRECIO,
  35 as COSTO,
  NULL as OBSERVACIONES,
  500 as APP_ID_USUARIO,
  1 as AUD_ESTADO,
  'SYSTEM' as AUD_USUARIO,
  TO_TIMESTAMP('20/04/2015 01:34:57.157000 PM','DD/MM/YYYY HH12:MI:SS.FF AM') as AUD_FECHA,
  TO_DATE('04/20/2015 01:34:55', 'MM/DD/YYYY HH24:MI:SS') as FECHA_REGISTRO
  FROM DUAL) B
ON (A.ID_PRECIO = B.ID_PRECIO)
WHEN NOT MATCHED THEN 
INSERT (
  ID_PRECIO, PRECIO, COSTO, OBSERVACIONES, APP_ID_USUARIO, 
  AUD_ESTADO, AUD_USUARIO, AUD_FECHA, FECHA_REGISTRO)
VALUES (
  B.ID_PRECIO, B.PRECIO, B.COSTO, B.OBSERVACIONES, B.APP_ID_USUARIO, 
  B.AUD_ESTADO, B.AUD_USUARIO, B.AUD_FECHA, B.FECHA_REGISTRO)
WHEN MATCHED THEN
UPDATE SET 
  A.PRECIO = B.PRECIO,
  A.COSTO = B.COSTO,
  A.OBSERVACIONES = B.OBSERVACIONES,
  A.APP_ID_USUARIO = B.APP_ID_USUARIO,
  A.AUD_ESTADO = B.AUD_ESTADO,
  A.AUD_USUARIO = B.AUD_USUARIO,
  A.AUD_FECHA = B.AUD_FECHA,
  A.FECHA_REGISTRO = B.FECHA_REGISTRO;

MERGE INTO UAB_GET.TPAR_PRECIO A USING
 (SELECT
  5 as ID_PRECIO,
  40 as PRECIO,
  NULL as COSTO,
  NULL as OBSERVACIONES,
  500 as APP_ID_USUARIO,
  1 as AUD_ESTADO,
  'SYSTEM' as AUD_USUARIO,
  TO_TIMESTAMP('28/04/2015 02:30:18.068000 PM','DD/MM/YYYY HH12:MI:SS.FF AM') as AUD_FECHA,
  TO_DATE('04/20/2015 01:34:55', 'MM/DD/YYYY HH24:MI:SS') as FECHA_REGISTRO
  FROM DUAL) B
ON (A.ID_PRECIO = B.ID_PRECIO)
WHEN NOT MATCHED THEN 
INSERT (
  ID_PRECIO, PRECIO, COSTO, OBSERVACIONES, APP_ID_USUARIO, 
  AUD_ESTADO, AUD_USUARIO, AUD_FECHA, FECHA_REGISTRO)
VALUES (
  B.ID_PRECIO, B.PRECIO, B.COSTO, B.OBSERVACIONES, B.APP_ID_USUARIO, 
  B.AUD_ESTADO, B.AUD_USUARIO, B.AUD_FECHA, B.FECHA_REGISTRO)
WHEN MATCHED THEN
UPDATE SET 
  A.PRECIO = B.PRECIO,
  A.COSTO = B.COSTO,
  A.OBSERVACIONES = B.OBSERVACIONES,
  A.APP_ID_USUARIO = B.APP_ID_USUARIO,
  A.AUD_ESTADO = B.AUD_ESTADO,
  A.AUD_USUARIO = B.AUD_USUARIO,
  A.AUD_FECHA = B.AUD_FECHA,
  A.FECHA_REGISTRO = B.FECHA_REGISTRO;

MERGE INTO UAB_GET.TPAR_PRECIO A USING
 (SELECT
  6 as ID_PRECIO,
  45 as PRECIO,
  NULL as COSTO,
  NULL as OBSERVACIONES,
  500 as APP_ID_USUARIO,
  1 as AUD_ESTADO,
  'SYSTEM' as AUD_USUARIO,
  TO_TIMESTAMP('28/04/2015 02:30:20.844000 PM','DD/MM/YYYY HH12:MI:SS.FF AM') as AUD_FECHA,
  TO_DATE('04/20/2015 01:34:55', 'MM/DD/YYYY HH24:MI:SS') as FECHA_REGISTRO
  FROM DUAL) B
ON (A.ID_PRECIO = B.ID_PRECIO)
WHEN NOT MATCHED THEN 
INSERT (
  ID_PRECIO, PRECIO, COSTO, OBSERVACIONES, APP_ID_USUARIO, 
  AUD_ESTADO, AUD_USUARIO, AUD_FECHA, FECHA_REGISTRO)
VALUES (
  B.ID_PRECIO, B.PRECIO, B.COSTO, B.OBSERVACIONES, B.APP_ID_USUARIO, 
  B.AUD_ESTADO, B.AUD_USUARIO, B.AUD_FECHA, B.FECHA_REGISTRO)
WHEN MATCHED THEN
UPDATE SET 
  A.PRECIO = B.PRECIO,
  A.COSTO = B.COSTO,
  A.OBSERVACIONES = B.OBSERVACIONES,
  A.APP_ID_USUARIO = B.APP_ID_USUARIO,
  A.AUD_ESTADO = B.AUD_ESTADO,
  A.AUD_USUARIO = B.AUD_USUARIO,
  A.AUD_FECHA = B.AUD_FECHA,
  A.FECHA_REGISTRO = B.FECHA_REGISTRO;

MERGE INTO UAB_GET.TPAR_PRECIO A USING
 (SELECT
  7 as ID_PRECIO,
  50 as PRECIO,
  NULL as COSTO,
  NULL as OBSERVACIONES,
  500 as APP_ID_USUARIO,
  1 as AUD_ESTADO,
  'SYSTEM' as AUD_USUARIO,
  TO_TIMESTAMP('28/04/2015 02:30:27.274000 PM','DD/MM/YYYY HH12:MI:SS.FF AM') as AUD_FECHA,
  TO_DATE('04/20/2015 01:34:55', 'MM/DD/YYYY HH24:MI:SS') as FECHA_REGISTRO
  FROM DUAL) B
ON (A.ID_PRECIO = B.ID_PRECIO)
WHEN NOT MATCHED THEN 
INSERT (
  ID_PRECIO, PRECIO, COSTO, OBSERVACIONES, APP_ID_USUARIO, 
  AUD_ESTADO, AUD_USUARIO, AUD_FECHA, FECHA_REGISTRO)
VALUES (
  B.ID_PRECIO, B.PRECIO, B.COSTO, B.OBSERVACIONES, B.APP_ID_USUARIO, 
  B.AUD_ESTADO, B.AUD_USUARIO, B.AUD_FECHA, B.FECHA_REGISTRO)
WHEN MATCHED THEN
UPDATE SET 
  A.PRECIO = B.PRECIO,
  A.COSTO = B.COSTO,
  A.OBSERVACIONES = B.OBSERVACIONES,
  A.APP_ID_USUARIO = B.APP_ID_USUARIO,
  A.AUD_ESTADO = B.AUD_ESTADO,
  A.AUD_USUARIO = B.AUD_USUARIO,
  A.AUD_FECHA = B.AUD_FECHA,
  A.FECHA_REGISTRO = B.FECHA_REGISTRO;

MERGE INTO UAB_GET.TPAR_PRECIO A USING
 (SELECT
  8 as ID_PRECIO,
  55 as PRECIO,
  NULL as COSTO,
  NULL as OBSERVACIONES,
  500 as APP_ID_USUARIO,
  1 as AUD_ESTADO,
  'SYSTEM' as AUD_USUARIO,
  TO_TIMESTAMP('28/04/2015 02:30:28.546000 PM','DD/MM/YYYY HH12:MI:SS.FF AM') as AUD_FECHA,
  TO_DATE('04/20/2015 01:34:55', 'MM/DD/YYYY HH24:MI:SS') as FECHA_REGISTRO
  FROM DUAL) B
ON (A.ID_PRECIO = B.ID_PRECIO)
WHEN NOT MATCHED THEN 
INSERT (
  ID_PRECIO, PRECIO, COSTO, OBSERVACIONES, APP_ID_USUARIO, 
  AUD_ESTADO, AUD_USUARIO, AUD_FECHA, FECHA_REGISTRO)
VALUES (
  B.ID_PRECIO, B.PRECIO, B.COSTO, B.OBSERVACIONES, B.APP_ID_USUARIO, 
  B.AUD_ESTADO, B.AUD_USUARIO, B.AUD_FECHA, B.FECHA_REGISTRO)
WHEN MATCHED THEN
UPDATE SET 
  A.PRECIO = B.PRECIO,
  A.COSTO = B.COSTO,
  A.OBSERVACIONES = B.OBSERVACIONES,
  A.APP_ID_USUARIO = B.APP_ID_USUARIO,
  A.AUD_ESTADO = B.AUD_ESTADO,
  A.AUD_USUARIO = B.AUD_USUARIO,
  A.AUD_FECHA = B.AUD_FECHA,
  A.FECHA_REGISTRO = B.FECHA_REGISTRO;

MERGE INTO UAB_GET.TPAR_PRECIO A USING
 (SELECT
  9 as ID_PRECIO,
  60 as PRECIO,
  NULL as COSTO,
  NULL as OBSERVACIONES,
  500 as APP_ID_USUARIO,
  1 as AUD_ESTADO,
  'SYSTEM' as AUD_USUARIO,
  TO_TIMESTAMP('28/04/2015 02:30:30.727000 PM','DD/MM/YYYY HH12:MI:SS.FF AM') as AUD_FECHA,
  TO_DATE('04/20/2015 01:34:55', 'MM/DD/YYYY HH24:MI:SS') as FECHA_REGISTRO
  FROM DUAL) B
ON (A.ID_PRECIO = B.ID_PRECIO)
WHEN NOT MATCHED THEN 
INSERT (
  ID_PRECIO, PRECIO, COSTO, OBSERVACIONES, APP_ID_USUARIO, 
  AUD_ESTADO, AUD_USUARIO, AUD_FECHA, FECHA_REGISTRO)
VALUES (
  B.ID_PRECIO, B.PRECIO, B.COSTO, B.OBSERVACIONES, B.APP_ID_USUARIO, 
  B.AUD_ESTADO, B.AUD_USUARIO, B.AUD_FECHA, B.FECHA_REGISTRO)
WHEN MATCHED THEN
UPDATE SET 
  A.PRECIO = B.PRECIO,
  A.COSTO = B.COSTO,
  A.OBSERVACIONES = B.OBSERVACIONES,
  A.APP_ID_USUARIO = B.APP_ID_USUARIO,
  A.AUD_ESTADO = B.AUD_ESTADO,
  A.AUD_USUARIO = B.AUD_USUARIO,
  A.AUD_FECHA = B.AUD_FECHA,
  A.FECHA_REGISTRO = B.FECHA_REGISTRO;

MERGE INTO UAB_GET.TPAR_PRECIO A USING
 (SELECT
  10 as ID_PRECIO,
  65 as PRECIO,
  NULL as COSTO,
  NULL as OBSERVACIONES,
  500 as APP_ID_USUARIO,
  1 as AUD_ESTADO,
  'SYSTEM' as AUD_USUARIO,
  TO_TIMESTAMP('28/04/2015 02:30:32.029000 PM','DD/MM/YYYY HH12:MI:SS.FF AM') as AUD_FECHA,
  TO_DATE('04/20/2015 01:34:55', 'MM/DD/YYYY HH24:MI:SS') as FECHA_REGISTRO
  FROM DUAL) B
ON (A.ID_PRECIO = B.ID_PRECIO)
WHEN NOT MATCHED THEN 
INSERT (
  ID_PRECIO, PRECIO, COSTO, OBSERVACIONES, APP_ID_USUARIO, 
  AUD_ESTADO, AUD_USUARIO, AUD_FECHA, FECHA_REGISTRO)
VALUES (
  B.ID_PRECIO, B.PRECIO, B.COSTO, B.OBSERVACIONES, B.APP_ID_USUARIO, 
  B.AUD_ESTADO, B.AUD_USUARIO, B.AUD_FECHA, B.FECHA_REGISTRO)
WHEN MATCHED THEN
UPDATE SET 
  A.PRECIO = B.PRECIO,
  A.COSTO = B.COSTO,
  A.OBSERVACIONES = B.OBSERVACIONES,
  A.APP_ID_USUARIO = B.APP_ID_USUARIO,
  A.AUD_ESTADO = B.AUD_ESTADO,
  A.AUD_USUARIO = B.AUD_USUARIO,
  A.AUD_FECHA = B.AUD_FECHA,
  A.FECHA_REGISTRO = B.FECHA_REGISTRO;

MERGE INTO UAB_GET.TPAR_PRECIO A USING
 (SELECT
  11 as ID_PRECIO,
  70 as PRECIO,
  NULL as COSTO,
  NULL as OBSERVACIONES,
  500 as APP_ID_USUARIO,
  1 as AUD_ESTADO,
  'SYSTEM' as AUD_USUARIO,
  TO_TIMESTAMP('28/04/2015 02:30:34.537000 PM','DD/MM/YYYY HH12:MI:SS.FF AM') as AUD_FECHA,
  TO_DATE('04/20/2015 01:34:55', 'MM/DD/YYYY HH24:MI:SS') as FECHA_REGISTRO
  FROM DUAL) B
ON (A.ID_PRECIO = B.ID_PRECIO)
WHEN NOT MATCHED THEN 
INSERT (
  ID_PRECIO, PRECIO, COSTO, OBSERVACIONES, APP_ID_USUARIO, 
  AUD_ESTADO, AUD_USUARIO, AUD_FECHA, FECHA_REGISTRO)
VALUES (
  B.ID_PRECIO, B.PRECIO, B.COSTO, B.OBSERVACIONES, B.APP_ID_USUARIO, 
  B.AUD_ESTADO, B.AUD_USUARIO, B.AUD_FECHA, B.FECHA_REGISTRO)
WHEN MATCHED THEN
UPDATE SET 
  A.PRECIO = B.PRECIO,
  A.COSTO = B.COSTO,
  A.OBSERVACIONES = B.OBSERVACIONES,
  A.APP_ID_USUARIO = B.APP_ID_USUARIO,
  A.AUD_ESTADO = B.AUD_ESTADO,
  A.AUD_USUARIO = B.AUD_USUARIO,
  A.AUD_FECHA = B.AUD_FECHA,
  A.FECHA_REGISTRO = B.FECHA_REGISTRO;

MERGE INTO UAB_GET.TPAR_PRECIO A USING
 (SELECT
  12 as ID_PRECIO,
  75 as PRECIO,
  NULL as COSTO,
  NULL as OBSERVACIONES,
  500 as APP_ID_USUARIO,
  1 as AUD_ESTADO,
  'SYSTEM' as AUD_USUARIO,
  TO_TIMESTAMP('28/04/2015 02:30:36.109000 PM','DD/MM/YYYY HH12:MI:SS.FF AM') as AUD_FECHA,
  TO_DATE('04/20/2015 01:34:55', 'MM/DD/YYYY HH24:MI:SS') as FECHA_REGISTRO
  FROM DUAL) B
ON (A.ID_PRECIO = B.ID_PRECIO)
WHEN NOT MATCHED THEN 
INSERT (
  ID_PRECIO, PRECIO, COSTO, OBSERVACIONES, APP_ID_USUARIO, 
  AUD_ESTADO, AUD_USUARIO, AUD_FECHA, FECHA_REGISTRO)
VALUES (
  B.ID_PRECIO, B.PRECIO, B.COSTO, B.OBSERVACIONES, B.APP_ID_USUARIO, 
  B.AUD_ESTADO, B.AUD_USUARIO, B.AUD_FECHA, B.FECHA_REGISTRO)
WHEN MATCHED THEN
UPDATE SET 
  A.PRECIO = B.PRECIO,
  A.COSTO = B.COSTO,
  A.OBSERVACIONES = B.OBSERVACIONES,
  A.APP_ID_USUARIO = B.APP_ID_USUARIO,
  A.AUD_ESTADO = B.AUD_ESTADO,
  A.AUD_USUARIO = B.AUD_USUARIO,
  A.AUD_FECHA = B.AUD_FECHA,
  A.FECHA_REGISTRO = B.FECHA_REGISTRO;

MERGE INTO UAB_GET.TPAR_PRECIO A USING
 (SELECT
  13 as ID_PRECIO,
  80 as PRECIO,
  NULL as COSTO,
  NULL as OBSERVACIONES,
  500 as APP_ID_USUARIO,
  1 as AUD_ESTADO,
  'SYSTEM' as AUD_USUARIO,
  TO_TIMESTAMP('28/04/2015 02:30:37.674000 PM','DD/MM/YYYY HH12:MI:SS.FF AM') as AUD_FECHA,
  TO_DATE('04/20/2015 01:34:55', 'MM/DD/YYYY HH24:MI:SS') as FECHA_REGISTRO
  FROM DUAL) B
ON (A.ID_PRECIO = B.ID_PRECIO)
WHEN NOT MATCHED THEN 
INSERT (
  ID_PRECIO, PRECIO, COSTO, OBSERVACIONES, APP_ID_USUARIO, 
  AUD_ESTADO, AUD_USUARIO, AUD_FECHA, FECHA_REGISTRO)
VALUES (
  B.ID_PRECIO, B.PRECIO, B.COSTO, B.OBSERVACIONES, B.APP_ID_USUARIO, 
  B.AUD_ESTADO, B.AUD_USUARIO, B.AUD_FECHA, B.FECHA_REGISTRO)
WHEN MATCHED THEN
UPDATE SET 
  A.PRECIO = B.PRECIO,
  A.COSTO = B.COSTO,
  A.OBSERVACIONES = B.OBSERVACIONES,
  A.APP_ID_USUARIO = B.APP_ID_USUARIO,
  A.AUD_ESTADO = B.AUD_ESTADO,
  A.AUD_USUARIO = B.AUD_USUARIO,
  A.AUD_FECHA = B.AUD_FECHA,
  A.FECHA_REGISTRO = B.FECHA_REGISTRO;

MERGE INTO UAB_GET.TPAR_PRECIO A USING
 (SELECT
  14 as ID_PRECIO,
  85 as PRECIO,
  NULL as COSTO,
  NULL as OBSERVACIONES,
  500 as APP_ID_USUARIO,
  1 as AUD_ESTADO,
  'SYSTEM' as AUD_USUARIO,
  TO_TIMESTAMP('28/04/2015 02:30:40.338000 PM','DD/MM/YYYY HH12:MI:SS.FF AM') as AUD_FECHA,
  TO_DATE('04/20/2015 01:34:55', 'MM/DD/YYYY HH24:MI:SS') as FECHA_REGISTRO
  FROM DUAL) B
ON (A.ID_PRECIO = B.ID_PRECIO)
WHEN NOT MATCHED THEN 
INSERT (
  ID_PRECIO, PRECIO, COSTO, OBSERVACIONES, APP_ID_USUARIO, 
  AUD_ESTADO, AUD_USUARIO, AUD_FECHA, FECHA_REGISTRO)
VALUES (
  B.ID_PRECIO, B.PRECIO, B.COSTO, B.OBSERVACIONES, B.APP_ID_USUARIO, 
  B.AUD_ESTADO, B.AUD_USUARIO, B.AUD_FECHA, B.FECHA_REGISTRO)
WHEN MATCHED THEN
UPDATE SET 
  A.PRECIO = B.PRECIO,
  A.COSTO = B.COSTO,
  A.OBSERVACIONES = B.OBSERVACIONES,
  A.APP_ID_USUARIO = B.APP_ID_USUARIO,
  A.AUD_ESTADO = B.AUD_ESTADO,
  A.AUD_USUARIO = B.AUD_USUARIO,
  A.AUD_FECHA = B.AUD_FECHA,
  A.FECHA_REGISTRO = B.FECHA_REGISTRO;

MERGE INTO UAB_GET.TPAR_PRECIO A USING
 (SELECT
  15 as ID_PRECIO,
  90 as PRECIO,
  NULL as COSTO,
  NULL as OBSERVACIONES,
  500 as APP_ID_USUARIO,
  1 as AUD_ESTADO,
  'SYSTEM' as AUD_USUARIO,
  TO_TIMESTAMP('28/04/2015 02:30:41.849000 PM','DD/MM/YYYY HH12:MI:SS.FF AM') as AUD_FECHA,
  TO_DATE('04/20/2015 01:34:55', 'MM/DD/YYYY HH24:MI:SS') as FECHA_REGISTRO
  FROM DUAL) B
ON (A.ID_PRECIO = B.ID_PRECIO)
WHEN NOT MATCHED THEN 
INSERT (
  ID_PRECIO, PRECIO, COSTO, OBSERVACIONES, APP_ID_USUARIO, 
  AUD_ESTADO, AUD_USUARIO, AUD_FECHA, FECHA_REGISTRO)
VALUES (
  B.ID_PRECIO, B.PRECIO, B.COSTO, B.OBSERVACIONES, B.APP_ID_USUARIO, 
  B.AUD_ESTADO, B.AUD_USUARIO, B.AUD_FECHA, B.FECHA_REGISTRO)
WHEN MATCHED THEN
UPDATE SET 
  A.PRECIO = B.PRECIO,
  A.COSTO = B.COSTO,
  A.OBSERVACIONES = B.OBSERVACIONES,
  A.APP_ID_USUARIO = B.APP_ID_USUARIO,
  A.AUD_ESTADO = B.AUD_ESTADO,
  A.AUD_USUARIO = B.AUD_USUARIO,
  A.AUD_FECHA = B.AUD_FECHA,
  A.FECHA_REGISTRO = B.FECHA_REGISTRO;

MERGE INTO UAB_GET.TPAR_PRECIO A USING
 (SELECT
  16 as ID_PRECIO,
  100 as PRECIO,
  NULL as COSTO,
  NULL as OBSERVACIONES,
  500 as APP_ID_USUARIO,
  1 as AUD_ESTADO,
  'SYSTEM' as AUD_USUARIO,
  TO_TIMESTAMP('28/04/2015 02:30:43.746000 PM','DD/MM/YYYY HH12:MI:SS.FF AM') as AUD_FECHA,
  TO_DATE('04/20/2015 01:34:55', 'MM/DD/YYYY HH24:MI:SS') as FECHA_REGISTRO
  FROM DUAL) B
ON (A.ID_PRECIO = B.ID_PRECIO)
WHEN NOT MATCHED THEN 
INSERT (
  ID_PRECIO, PRECIO, COSTO, OBSERVACIONES, APP_ID_USUARIO, 
  AUD_ESTADO, AUD_USUARIO, AUD_FECHA, FECHA_REGISTRO)
VALUES (
  B.ID_PRECIO, B.PRECIO, B.COSTO, B.OBSERVACIONES, B.APP_ID_USUARIO, 
  B.AUD_ESTADO, B.AUD_USUARIO, B.AUD_FECHA, B.FECHA_REGISTRO)
WHEN MATCHED THEN
UPDATE SET 
  A.PRECIO = B.PRECIO,
  A.COSTO = B.COSTO,
  A.OBSERVACIONES = B.OBSERVACIONES,
  A.APP_ID_USUARIO = B.APP_ID_USUARIO,
  A.AUD_ESTADO = B.AUD_ESTADO,
  A.AUD_USUARIO = B.AUD_USUARIO,
  A.AUD_FECHA = B.AUD_FECHA,
  A.FECHA_REGISTRO = B.FECHA_REGISTRO;

MERGE INTO UAB_GET.TPAR_PRECIO A USING
 (SELECT
  17 as ID_PRECIO,
  120 as PRECIO,
  NULL as COSTO,
  NULL as OBSERVACIONES,
  500 as APP_ID_USUARIO,
  1 as AUD_ESTADO,
  'SYSTEM' as AUD_USUARIO,
  TO_TIMESTAMP('28/04/2015 02:30:46.836000 PM','DD/MM/YYYY HH12:MI:SS.FF AM') as AUD_FECHA,
  TO_DATE('04/20/2015 01:34:55', 'MM/DD/YYYY HH24:MI:SS') as FECHA_REGISTRO
  FROM DUAL) B
ON (A.ID_PRECIO = B.ID_PRECIO)
WHEN NOT MATCHED THEN 
INSERT (
  ID_PRECIO, PRECIO, COSTO, OBSERVACIONES, APP_ID_USUARIO, 
  AUD_ESTADO, AUD_USUARIO, AUD_FECHA, FECHA_REGISTRO)
VALUES (
  B.ID_PRECIO, B.PRECIO, B.COSTO, B.OBSERVACIONES, B.APP_ID_USUARIO, 
  B.AUD_ESTADO, B.AUD_USUARIO, B.AUD_FECHA, B.FECHA_REGISTRO)
WHEN MATCHED THEN
UPDATE SET 
  A.PRECIO = B.PRECIO,
  A.COSTO = B.COSTO,
  A.OBSERVACIONES = B.OBSERVACIONES,
  A.APP_ID_USUARIO = B.APP_ID_USUARIO,
  A.AUD_ESTADO = B.AUD_ESTADO,
  A.AUD_USUARIO = B.AUD_USUARIO,
  A.AUD_FECHA = B.AUD_FECHA,
  A.FECHA_REGISTRO = B.FECHA_REGISTRO;

COMMIT;
