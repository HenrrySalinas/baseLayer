SET DEFINE OFF;
MERGE INTO UAB_GET.T_ASIENTO_RUTA A USING
 (SELECT
  5 as ID_ASIENTO_RUTA,
  5 as ID_RUTA,
  3 as ID_ASIENTO,
  1 as ID_ESTADO_ASIENTO,
  'MOMOMOMO' as DESCRIPCION,
  999 as APP_ID_USUARIO,
  1 as AUD_ESTADO,
  'APP_GESTION_UAB' as AUD_USUARIO,
  TO_TIMESTAMP('23/04/2015 05:07:17.497000 PM','DD/MM/YYYY HH12:MI:SS.FF AM') as AUD_FECHA,
  TO_DATE('04/23/2015 17:07:00', 'MM/DD/YYYY HH24:MI:SS') as FECHA_REGISTRO
  FROM DUAL) B
ON (A.ID_ASIENTO_RUTA = B.ID_ASIENTO_RUTA)
WHEN NOT MATCHED THEN 
INSERT (
  ID_ASIENTO_RUTA, ID_RUTA, ID_ASIENTO, ID_ESTADO_ASIENTO, DESCRIPCION, 
  APP_ID_USUARIO, AUD_ESTADO, AUD_USUARIO, AUD_FECHA, FECHA_REGISTRO)
VALUES (
  B.ID_ASIENTO_RUTA, B.ID_RUTA, B.ID_ASIENTO, B.ID_ESTADO_ASIENTO, B.DESCRIPCION, 
  B.APP_ID_USUARIO, B.AUD_ESTADO, B.AUD_USUARIO, B.AUD_FECHA, B.FECHA_REGISTRO)
WHEN MATCHED THEN
UPDATE SET 
  A.ID_RUTA = B.ID_RUTA,
  A.ID_ASIENTO = B.ID_ASIENTO,
  A.ID_ESTADO_ASIENTO = B.ID_ESTADO_ASIENTO,
  A.DESCRIPCION = B.DESCRIPCION,
  A.APP_ID_USUARIO = B.APP_ID_USUARIO,
  A.AUD_ESTADO = B.AUD_ESTADO,
  A.AUD_USUARIO = B.AUD_USUARIO,
  A.AUD_FECHA = B.AUD_FECHA,
  A.FECHA_REGISTRO = B.FECHA_REGISTRO;

MERGE INTO UAB_GET.T_ASIENTO_RUTA A USING
 (SELECT
  1 as ID_ASIENTO_RUTA,
  5 as ID_RUTA,
  1 as ID_ASIENTO,
  1 as ID_ESTADO_ASIENTO,
  NULL as DESCRIPCION,
  500 as APP_ID_USUARIO,
  1 as AUD_ESTADO,
  'SYSTEM' as AUD_USUARIO,
  TO_TIMESTAMP('20/04/2015 05:59:49.606000 PM','DD/MM/YYYY HH12:MI:SS.FF AM') as AUD_FECHA,
  TO_DATE('04/20/2015 06:00:41', 'MM/DD/YYYY HH24:MI:SS') as FECHA_REGISTRO
  FROM DUAL) B
ON (A.ID_ASIENTO_RUTA = B.ID_ASIENTO_RUTA)
WHEN NOT MATCHED THEN 
INSERT (
  ID_ASIENTO_RUTA, ID_RUTA, ID_ASIENTO, ID_ESTADO_ASIENTO, DESCRIPCION, 
  APP_ID_USUARIO, AUD_ESTADO, AUD_USUARIO, AUD_FECHA, FECHA_REGISTRO)
VALUES (
  B.ID_ASIENTO_RUTA, B.ID_RUTA, B.ID_ASIENTO, B.ID_ESTADO_ASIENTO, B.DESCRIPCION, 
  B.APP_ID_USUARIO, B.AUD_ESTADO, B.AUD_USUARIO, B.AUD_FECHA, B.FECHA_REGISTRO)
WHEN MATCHED THEN
UPDATE SET 
  A.ID_RUTA = B.ID_RUTA,
  A.ID_ASIENTO = B.ID_ASIENTO,
  A.ID_ESTADO_ASIENTO = B.ID_ESTADO_ASIENTO,
  A.DESCRIPCION = B.DESCRIPCION,
  A.APP_ID_USUARIO = B.APP_ID_USUARIO,
  A.AUD_ESTADO = B.AUD_ESTADO,
  A.AUD_USUARIO = B.AUD_USUARIO,
  A.AUD_FECHA = B.AUD_FECHA,
  A.FECHA_REGISTRO = B.FECHA_REGISTRO;

MERGE INTO UAB_GET.T_ASIENTO_RUTA A USING
 (SELECT
  2 as ID_ASIENTO_RUTA,
  6 as ID_RUTA,
  3 as ID_ASIENTO,
  2 as ID_ESTADO_ASIENTO,
  'Sin descripcion' as DESCRIPCION,
  500 as APP_ID_USUARIO,
  1 as AUD_ESTADO,
  'SYSTEM' as AUD_USUARIO,
  TO_TIMESTAMP('20/04/2015 06:00:35.521000 PM','DD/MM/YYYY HH12:MI:SS.FF AM') as AUD_FECHA,
  TO_DATE('04/20/2015 06:00:46', 'MM/DD/YYYY HH24:MI:SS') as FECHA_REGISTRO
  FROM DUAL) B
ON (A.ID_ASIENTO_RUTA = B.ID_ASIENTO_RUTA)
WHEN NOT MATCHED THEN 
INSERT (
  ID_ASIENTO_RUTA, ID_RUTA, ID_ASIENTO, ID_ESTADO_ASIENTO, DESCRIPCION, 
  APP_ID_USUARIO, AUD_ESTADO, AUD_USUARIO, AUD_FECHA, FECHA_REGISTRO)
VALUES (
  B.ID_ASIENTO_RUTA, B.ID_RUTA, B.ID_ASIENTO, B.ID_ESTADO_ASIENTO, B.DESCRIPCION, 
  B.APP_ID_USUARIO, B.AUD_ESTADO, B.AUD_USUARIO, B.AUD_FECHA, B.FECHA_REGISTRO)
WHEN MATCHED THEN
UPDATE SET 
  A.ID_RUTA = B.ID_RUTA,
  A.ID_ASIENTO = B.ID_ASIENTO,
  A.ID_ESTADO_ASIENTO = B.ID_ESTADO_ASIENTO,
  A.DESCRIPCION = B.DESCRIPCION,
  A.APP_ID_USUARIO = B.APP_ID_USUARIO,
  A.AUD_ESTADO = B.AUD_ESTADO,
  A.AUD_USUARIO = B.AUD_USUARIO,
  A.AUD_FECHA = B.AUD_FECHA,
  A.FECHA_REGISTRO = B.FECHA_REGISTRO;

MERGE INTO UAB_GET.T_ASIENTO_RUTA A USING
 (SELECT
  3 as ID_ASIENTO_RUTA,
  5 as ID_RUTA,
  3 as ID_ASIENTO,
  1 as ID_ESTADO_ASIENTO,
  'NO HAY DESCripcion' as DESCRIPCION,
  888 as APP_ID_USUARIO,
  1 as AUD_ESTADO,
  'SYSTEM' as AUD_USUARIO,
  TO_TIMESTAMP('20/04/2015 06:04:48.379000 PM','DD/MM/YYYY HH12:MI:SS.FF AM') as AUD_FECHA,
  NULL as FECHA_REGISTRO
  FROM DUAL) B
ON (A.ID_ASIENTO_RUTA = B.ID_ASIENTO_RUTA)
WHEN NOT MATCHED THEN 
INSERT (
  ID_ASIENTO_RUTA, ID_RUTA, ID_ASIENTO, ID_ESTADO_ASIENTO, DESCRIPCION, 
  APP_ID_USUARIO, AUD_ESTADO, AUD_USUARIO, AUD_FECHA, FECHA_REGISTRO)
VALUES (
  B.ID_ASIENTO_RUTA, B.ID_RUTA, B.ID_ASIENTO, B.ID_ESTADO_ASIENTO, B.DESCRIPCION, 
  B.APP_ID_USUARIO, B.AUD_ESTADO, B.AUD_USUARIO, B.AUD_FECHA, B.FECHA_REGISTRO)
WHEN MATCHED THEN
UPDATE SET 
  A.ID_RUTA = B.ID_RUTA,
  A.ID_ASIENTO = B.ID_ASIENTO,
  A.ID_ESTADO_ASIENTO = B.ID_ESTADO_ASIENTO,
  A.DESCRIPCION = B.DESCRIPCION,
  A.APP_ID_USUARIO = B.APP_ID_USUARIO,
  A.AUD_ESTADO = B.AUD_ESTADO,
  A.AUD_USUARIO = B.AUD_USUARIO,
  A.AUD_FECHA = B.AUD_FECHA,
  A.FECHA_REGISTRO = B.FECHA_REGISTRO;

MERGE INTO UAB_GET.T_ASIENTO_RUTA A USING
 (SELECT
  4 as ID_ASIENTO_RUTA,
  5 as ID_RUTA,
  3 as ID_ASIENTO,
  1 as ID_ESTADO_ASIENTO,
  'NOTHING DESCRIPTION' as DESCRIPCION,
  555 as APP_ID_USUARIO,
  1 as AUD_ESTADO,
  'SYSTEM' as AUD_USUARIO,
  TO_TIMESTAMP('22/04/2015 02:09:38.206000 PM','DD/MM/YYYY HH12:MI:SS.FF AM') as AUD_FECHA,
  NULL as FECHA_REGISTRO
  FROM DUAL) B
ON (A.ID_ASIENTO_RUTA = B.ID_ASIENTO_RUTA)
WHEN NOT MATCHED THEN 
INSERT (
  ID_ASIENTO_RUTA, ID_RUTA, ID_ASIENTO, ID_ESTADO_ASIENTO, DESCRIPCION, 
  APP_ID_USUARIO, AUD_ESTADO, AUD_USUARIO, AUD_FECHA, FECHA_REGISTRO)
VALUES (
  B.ID_ASIENTO_RUTA, B.ID_RUTA, B.ID_ASIENTO, B.ID_ESTADO_ASIENTO, B.DESCRIPCION, 
  B.APP_ID_USUARIO, B.AUD_ESTADO, B.AUD_USUARIO, B.AUD_FECHA, B.FECHA_REGISTRO)
WHEN MATCHED THEN
UPDATE SET 
  A.ID_RUTA = B.ID_RUTA,
  A.ID_ASIENTO = B.ID_ASIENTO,
  A.ID_ESTADO_ASIENTO = B.ID_ESTADO_ASIENTO,
  A.DESCRIPCION = B.DESCRIPCION,
  A.APP_ID_USUARIO = B.APP_ID_USUARIO,
  A.AUD_ESTADO = B.AUD_ESTADO,
  A.AUD_USUARIO = B.AUD_USUARIO,
  A.AUD_FECHA = B.AUD_FECHA,
  A.FECHA_REGISTRO = B.FECHA_REGISTRO;

COMMIT;
